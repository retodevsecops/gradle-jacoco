buildscript {
	ext {
		cleanArchitectureVersion = '3.15.1'
		springBootVersion = '3.2.2'
		sonarVersion = '4.4.1.3373'
		jacocoVersion = '0.8.11'
        lombokVersion = '1.18.30'
	mapstructVersion = "1.5.5.Final"
        jKubeVersion = '1.13.0'
	}
}

plugins {
	id 'co.com.bancolombia.cleanArchitecture' version "${cleanArchitectureVersion}"
	id 'org.springframework.boot' version "${springBootVersion}" apply false
	id 'org.sonarqube' version "${sonarVersion}"
	id 'jacoco'
	id 'org.eclipse.jkube.kubernetes' version "${jKubeVersion}"
}

sonar {
    def modules = subprojects.projectDir.collect { "${it.toString().replace(project.projectDir.toString() + "/", "")}" }
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.modules", "${modules.join(',')}"
        property "sonar.sources", "src,deployment,settings.gradle,main.gradle,build.gradle,${modules.collect { "${it}/build.gradle" }.join(',')}"
        property "sonar.exclusions","**/MainApplication.java"
        property "sonar.test", "src/test"
        property "sonar.java.binaries", ""
        property "sonar.junit.reportsPath", ""
        property "sonar.java.coveragePlugin", "jacoco"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacocoMergedReport/jacocoMergedReport.xml"
        property "sonar.externalIssuesReportPaths", "build/issues.json"
    }
}

version = '1.0.1-SNAPSHOT'
kubernetes {
    buildStrategy = "docker"
    images {
        image {
            name = "us-west1-docker.pkg.dev/csb-images/csb-repository-docker/${project.name}:${project.version}"
            alias = "${project.name}:${project.version}"
            build {
                from = "openjdk:17"
                assembly {
                    targetDir = "/deployments"
                }
                env {
                    JAVA_LIB_DIR = "/deployments"
                    ACTIVE_PROFILE = "${ENVIRONMENT_NAME:'dev'}"
                }
                cmd {
                    exec = ["java","-jar","-Dspring.profiles.active=${ACTIVE_PROFILE:'dev'}","/deployments/${project.name}-${project.version}.jar"]
                }
                ports = ['8066']
            }
        }
    }
    resources {
        namespace = 'puc-backend'
        imagePullPolicy = 'Always'
    }
}

apply from: './main.gradle'
